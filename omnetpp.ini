[General]
ned-path = "../../inet-4.5.4/src/inet;./"

#-----------------------------------------------------------------------------
[Config FsrTest01]
description = Two hosts communicating wirelessly
network = WirelessA
sim-time-limit = 60s
#repeat = 40

*.host*.ipv4.arp.typename = "GlobalArp"

*.hostA.numApps = 1
*.hostA.app[0].typename = "UdpBasicApp"
*.hostA.app[0].destAddresses = "hostB"
*.hostA.app[0].destPort = 5000
*.hostA.app[0].messageLength = 1000B
*.hostA.app[0].sendInterval = exponential(12ms)
*.hostA.app[0].packetName = "UDPData"

*.hostB.numApps = 1
*.hostB.app[0].typename = "UdpSink"
*.hostB.app[0].localPort = 5000

*.host*.wlan[0].typename = "AckingWirelessInterface"
*.host*.wlan[0].mac.useAck = false
*.host*.wlan[0].mac.fullDuplex = false
*.host*.wlan[0].radio.transmitter.communicationRange = 300m
*.host*.wlan[0].radio.receiver.ignoreInterference = true
*.host*.wlan[0].mac.headerLength = 23B

*.host*.**.bitrate = 1Mbps

#-----------------------------------------------------------------------------
#[Config Wireless02]
#description = Setting up some animations
#extends = Wireless01

*.hostA.wlan[0].radio.displayCommunicationRange = true

*.visualizer.sceneVisualizer.descriptionFigure = "title"

*.visualizer.mediumVisualizer.displaySignals = true

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.physicalLinkVisualizer.packetFilter = "UDPData*"

#-----------------------------------------------------------------------------
#[Config Wireless03]
#description = Adding more nodes and decreasing the communication range
#extends = Wireless02
#network = WirelessB

#*.host*.wlan[0].radio.transmitter.communicationRange = 250m

*.hostR1.wlan[0].radio.displayCommunicationRange = true

#-----------------------------------------------------------------------------
#[Config Wireless04]
#description = Setting up static routing
#extends = Wireless03

*.host*.forwarding = true

*.configurator.config = xml("<config><interface hosts='**' address='10.0.0.x' netmask='255.255.255.0'/><autoroute metric='errorRate'/></config>")
*.configurator.optimizeRoutes = false
*.host*.ipv4.routingTable.netmaskRoutes = ""

*.visualizer.physicalLinkVisualizer.displayLinks = true
*.visualizer.dataLinkVisualizer.displayLinks = true
*.visualizer.networkRouteVisualizer.displayRoutes = true
*.visualizer.*LinkVisualizer.lineShift = 0
*.visualizer.networkRouteVisualizer.lineShift = 0
# *.visualizer.networkRouteVisualizer.packetFilter = "UDPData*"

#-----------------------------------------------------------------------------
#[Config Wireless05]
#description = Taking interference into account
#extends = Wireless04

*.host*.wlan[0].radio.receiver.ignoreInterference = false
*.host*.wlan[0].radio.transmitter.interferenceRange = 500m

*.hostA.wlan[0].radio.displayInterferenceRange = true

*.visualizer.dataLinkVisualizer.packetFilter = ""

#-----------------------------------------------------------------------------
#[Config Wireless06]
#description = Using CSMA to better utilize the medium
#extends = Wireless05

*.host*.wlan[0].typename = "WirelessInterface"
*.host*.wlan[0].radio.typename = "UnitDiskRadio"
*.host*.wlan[0].mac.typename = "CsmaCaMac"
*.host*.wlan[0].mac.ackTimeout = 300us
*.host*.wlan[0].queue.typename = "DropTailQueue"
*.host*.wlan[0].queue.packetCapacity = -1

#-----------------------------------------------------------------------------
#[Config Wireless07]
#description = Turning on ACKs in CSMA
#extends = Wireless06

*.host*.wlan[0].mac.useAck = true

#-----------------------------------------------------------------------------
#[Config Wireless08]
#description = Modeling energy consumption
#extends = Wireless07

*.host*.wlan[0].radio.energyConsumer.typename = "StateBasedEpEnergyConsumer"
*.host*.wlan[0].radio.energyConsumer.offPowerConsumption = 0mW
*.host*.wlan[0].radio.energyConsumer.sleepPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.switchingPowerConsumption = 1mW
*.host*.wlan[0].radio.energyConsumer.receiverIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.receiverBusyPowerConsumption = 5mW
*.host*.wlan[0].radio.energyConsumer.receiverReceivingPowerConsumption = 10mW
*.host*.wlan[0].radio.energyConsumer.transmitterIdlePowerConsumption = 2mW
*.host*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = 100mW
#*.host*.wlan[0].radio.energyConsumer.transmitterTransmittingPowerConsumption = ${N=40..200 step 10}mW

*.host*.energyStorage.typename = "IdealEpEnergyStorage"

*.host*.wlan[0].radio.displayInterferenceRange = false
# *.hostR1.wlan[0].radio.displayCommunicationRange = false

*.visualizer.mediumVisualizer.displaySignals = false

#-----------------------------------------------------------------------------
#[Config Wireless09]
#description = Configuring node movements
#extends = Wireless08

*.hostR*.mobility.typename = "LinearMobility"
*.hostR*.mobility.speed = 12mps
#*.hostR*.mobility.speed = ${N=6..21 step 3}mps
*.hostR*.mobility.initialMovementHeading = 270deg

*.host*.wlan[0].queue.packetCapacity = 10

*.visualizer.mobilityVisualizer.displayVelocities = true
*.visualizer.mobilityVisualizer.displayMovementTrails = true

#-----------------------------------------------------------------------------
#[Config Wireless10]
#description = Configuring ad-hoc routing (AODV)
#extends = Wireless09

*.configurator.addStaticRoutes = false

#*.host*.typename = "FsrNode"
**.routing.typename = "FsrNode"

# This is required, otherwise all the nodes will start transmitting at the same time and even CSMA will not help
*.hostA.routing.startupTime = 0.010s
*.hostB.routing.startupTime = 0.015s
*.hostR1.routing.startupTime = 0.020s
*.hostR2.routing.startupTime = 0.025s
*.hostR3.routing.startupTime = 0.030s

#**.routing.scopes = ScopesParam {
#    scopes: [
#        { scope: 1, period: 3s },
#        { scope: 2, period: 6s },
#        { scope: 3, period: 9s }
#    ]
#    }

*.hostB.wlan[0].radio.displayCommunicationRange = true

#*.visualizer.dataLinkVisualizer.packetFilter = "AODV*"
